<?php
/**
 * Created by PhpStorm.
 * User: alice
 * Date: 2017/5/19
 * Time: 10:11
 */
require_once "Mobile_Detect.php";
class ControllerPaymentCreditCard extends Controller
{
    const paymentMethod = "Credit Card";
    private $id;

    public function __construct($registry)
    {
        parent::__construct($registry);
        $this->load->model('checkout/order');
    }

    public function confirm()
    {
        $this->load->model('checkout/order');

        //$this->model_checkout_order->confirm($this->session->data['order_id'], $this->config->get('creditcard_order_status_id'));
    }

    public function index()
    {
        $detect = new Mobile_Detect();
        if ($detect->isiOS()) {
            $_SESSION['isMobile'] = 1;
        } else if ($detect->isMobile()) {
            $_SESSION['isMobile'] = 1;
        } else if ($detect->isTablet()) {
            $_SESSION['isMobile'] = 0;
        } else {
            $_SESSION['isMobile'] = 0;
        }

        $data['button_confirm'] = $this->language->get('button_confirm');
        $data['button_back'] = $this->language->get('button_back');
        $this->id = 'payment';
        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard.tpl')) {
            return $this->load->view($this->config->get('config_template') . '/template/payment/creditcard.tpl', $data);
        } else {
            return $this->load->view('payment/creditcard', $data);
        }

    }


    public function creditcardiframe()
    {

        $this->children = array(
            // 'common/content_top',
            //'common/content_bottom',
            'common/footer',
            'common/header'
        );

        $this->tocreditcard();
        // $data['content_top'] = $this->load->controller('common/content_top');
        //$data['content_bottom'] = $this->load->controller('common/content_bottom');
        $data['footer'] = $this->load->controller('common/footer');
        $data['header'] = $this->load->controller('common/header');

        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcardiframe.tpl')) {
            return $this->load->view($this->config->get('config_template') . '/template/payment/creditcardiframe.tpl', $data);
        } else {
            return $this->load->view('payment/creditcardiframe', $data);
        }

    }


    public function tocreditcard()
    {
        $data['footer'] = $this->load->controller('common/footer');
        $data['header'] = $this->load->controller('common/header');

        $data['button_confirm'] = $this->language->get('button_confirm');
        $data['button_back'] = $this->language->get('button_back');

        $order_info = $this->model_checkout_order->getOrder($this->session->data['order_id']);

        $array = array(
            'creditcard_gateway',
            'creditcard_merchant',
            'creditcard_gatewayno',
            'creditcard_signkey'
        );
        $data['my_message'] = array();
       /* foreach ($array as $v) {
            $result = $this->model_checkout_order->getOwnerMessage($v);
            $data['my_message'][$v] = $result;
        }*/

        $data['action'] = "https://payment.globebill.com/TestInterface";//$data['my_message']['creditcard_gateway'];//提交的网关
        $data['merNo'] = "11021";//$data['my_message']['creditcard_merchant'];//商户号
        $data['gatewayNo'] = "11021001";//$data['my_message']['creditcard_gatewayno'];//网关
        $data['orderNo'] = $order_info['order_id'];
        $data['orderAmount'] = $order_info['check_money'];
        $data['orderCurrency'] = $order_info['currency_code'];

        if (!isset($this->request->server['HHTPS']) || ($this->request->server['HTTPS'] != 'on')) {
            $returnUrl = HTTP_SERVER . 'index.php?route=payment/creditcard/callback';
        } else {
            $returnUrl = HTTPS_SERVER . 'index.php?route=payment/creditcard/callback';
        }

        $data['returnUrl'] = $returnUrl;//返回地址

        $remark = '';
        $data['remark'] = '';//备注

        $signKey = "j2rV022z";//$data['my_message']['creditcard_signkey'];
        $signSrc = $data['merNo'] . $data['gatewayNo'] . $data['orderNo'] . $data['orderCurrency'] . $data['orderAmount'] . $data['returnUrl'] . $signKey;
        $signInfo = hash("sha256", $signSrc);
        $data['signInfo'] = $signInfo;
        $paymentMethod = 'Credit Card';
        $data['paymentMethod'] = $paymentMethod;

        $firstName = $order_info['shipping_firstname'];
        $lastName = $order_info['shipping_lastname'];
        $email = $order_info['email'];
        $phone = empty($order_info['shipping_telephone']) ? $this->session->data['shipping_address']['telephone'] : $order_info['shipping_telephone'];
        $postCode = $order_info['shipping_postcode'];
        $rand = '';
        for ($i = 0; $i < 6; $i++) {
            $temp = rand(0, 9);
            $rand .= $temp;
        }
        $postCode = empty($postCode) ? $rand : $postCode;
        $interfaceInfo = 'opencart';
        $interfaceVersion = 'V2.3';
        $isMobile = $this->session->data['isMobile'];
        $city = $order_info['shipping_city'];
        $state = $order_info['shipping_zone'];
        $country = $order_info['shipping_country'];
        if (!$order_info['shipping_address_2']) {
            $address = $order_info['shipping_address_1'];
        } else {
            $address = $order_info['shipping_address_1'] . ',' . $order_info['shipping_address_2'];
        }

        $data['firstName'] = $firstName;
        $data['lastName'] = $lastName;
        $data['email'] = $email;
        $data['phone'] = $phone;
        $data['zip'] = $postCode;
        $data['city'] = $city;
        $data['state'] = $state;
        $data['country'] = $country;
        $data['address'] = $address;
        $data['interfaceInfo'] = $interfaceInfo;
        $data['interfaceVersion'] = $interfaceVersion;
        $data['isMobile'] = $isMobile;

        //log message

       /* $fileData = date('Y-m-d');
        $postData = date('Y-m-d H:i:s');
        $newFile = fopen("cardLog/" . $fileData . ".log", "a+");
        $post_log = $postData . "[POST]\r\n" .
            "merNo = " . $data['merNo'] . "\r\n" .
            "gatewayNo = " . $data['gatewayNo'] . "\r\n" .
            "orderNo = " . $data['orderNo'] . "\r\n" .
            "orderCurrency = " . $data['orderCurrency'] . "\r\n" .
            "orderAmount = " . $data['orderAmount'] . "\r\n" .
            "returnUrl = " . $data['returnUrl'] . "\r\n" .
            "signInfo = " . $data['signInfo'] . "\r\n" .
            "firstName = " . $firstName . "\r\n" .
            "lastName = " . $lastName . "\r\n" .
            "email = " . $email . "\r\n" .
            "phone = " . $phone . "\r\n" .
            "remark = " . $remark . "\r\n" .
            "paymentMethod = " . $paymentMethod . "\r\n" .
            "country = " . $country . "\r\n" .
            "state = " . $state . "\r\n" .
            "city = " . $city . "\r\n" .
            "address = " . $address . "\r\n" .
            "zip = " . $postCode . "\r\n" .
            "interfaceInfo = " . $interfaceInfo . "\r\n" .
            "interfaceVersion = " . $interfaceVersion . "\r\n" .
            "isMobile = " . $isMobile . "\r\n";
        $post_log = $post_log . "*************************************\r\n";
        $post_log = $post_log . file_get_contents("cardLog/" . $fileData . ".log");
        $filename = fopen("cardLog/" . $fileData. ".log", "r+");
        fwrite($filename, $post_log);
        fclose($filename);
        fclose($newFile);*/

        $this->id = "payment";

        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcardiframe.tpl')) {
            return $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcardiframe.tpl', $data));
        } else {
            return $this->response->setOutput($this->load->view('payment/creditcardiframe', $data));
        }
    }


    public function callback()
    {
        $this->session->data['payment_method'] = 'Credit Card';
        if(isset($this->request->post['orderNo']) && !(empty($this->request->post['orderNo'])))
        {
            $this->load->language('payment/creditcard');
            $data['title'] = sprintf($this->language->get('heading_title'), $this->config->get('config_name'));
            if (!isset($this->request->server['HHTPS']) || ($this->request->server['HTTPS'] != 'on')) {
                $data['base'] = HTTP_SERVER;
            } else {
                $data['base'] = HTTPS_SERVER;
            }
            $config_name = $this->config->get('config_name')?$this->config->get('config_name'):'6#future';
            $data['charset'] = $this->language->get('charset');
            $data['language'] = $this->language->get('code');
            $data['direction'] = $this->language->get('direction');
            $data['heading_title'] = sprintf($this->language->get('heading_title'), $config_name);
            $data['text_response'] = $this->language->get('text_response');
            $data['text_success'] = $this->language->get('text_success');
            $data['text_success_wait'] = sprintf($this->language->get('text_success_wait'), HTTPS_SERVER . 'index.php?route=checkout/success');
            $data['text_success_url']  = HTTPS_SERVER . 'index.php?route=checkout/success';
            $data['text_failure_url']  = HTTPS_SERVER . 'index.php?route=crowdfunding/payment';

            $data['text_failure'] = $this->language->get('text_failure');
            $data['text_orderNo'] = '<font color="green">'.$this->request->post['orderNo'].'</font>';
            $data['text_result']  = '<font color="green">'.$this->request->post['orderStatus'].'</font>';
            $data['text_failure_wait'] = sprintf($this->language->get('text_failure_wait'), HTTPS_SERVER . 'index.php?route=crowdfunding/payment');
        }

        //$merNo = $this->model_check_order->getOwnerMessage('creditcard_merchant');
        //$gatewayNo = $this->model_check_order->getOwnerMessage('creditcard_gatewayno');
        $signKey =  "j2rV022z";//$this->model_check_order->getOwnerMessage('creditcard_signkey');
        $merNo   =  "11021";
        $gatewayNo= "11021001";
        $tradeNo = $this->request->post['tradeNo'];
        $orderNo = $this->request->post['orderNo'];
        $orderCurrency =$this->request->post['orderCurrency'];
        $orderAmount =$this->request->post['orderAmount'];
        $orderStatus =$this->request->post['orderStatus'];
        $signInfo = $this->request->post['signInfo'];
        $orderInfo = $this->request->post['orderInfo'];

        $signSrc = $merNo.$gatewayNo.$tradeNo.$orderNo.$orderCurrency.$orderAmount.$orderStatus.$orderInfo.$signKey;
        $signInfoCheck = strtoupper(hash("sha256",$signSrc));
        $message = '';

        if (isset($this->request->post['isPush']) == '1')
        {
            $logType = '[PUSH]';
            $mesType = '[PUSH]';
            $isPush  = $this->request->post['isPush'];
        } else {
            $logType = '[RETURN]';
            $mesType = '[POST]';
            $isPush  = '';
        }

       /* $fileDate   = date('Y-m-d');
        $returnDate = date('Y-m-d H:i:s');
        $newFile    = fopen( "cardLog/" . $fileDate . ".log", "a+" );
        $return_log = $returnDate . $logType. "\r\n".
            "isPush = "       . $isPush . "\r\n".
            "merNo = "        . $_REQUEST['merNo'] . "\r\n".
            "gatewayNo = "    . $_REQUEST['gatewayNo'] . "\r\n".
            "tradeNo = "      . $_REQUEST['tradeNo'] . "\r\n".
            "orderNo = "      . $_REQUEST['orderNo'] . "\r\n".
            "orderCurrency = ". $_REQUEST['orderCurrency'] . "\r\n".
            "orderAmount = "  . $_REQUEST['orderAmount'] . "\r\n".
            "orderStatus = "  . $_REQUEST['orderStatus'] . "\r\n".
            "orderInfo = "    . $_REQUEST['orderInfo'] . "\r\n".
            "signInfo = "     . $_REQUEST['signInfo'] . "\r\n".
            "riskInfo = "     . $_REQUEST['riskInfo'] . "\r\n".
            "remark = "       . $_REQUEST['remark'] . "\r\n";

        $return_log = $return_log . "*************************************\r\n";
        $return_log = $return_log.file_get_contents( "cardLog/" . $fileDate . ".log");
        $filename   = fopen( "cardLog/" . $fileDate . ".log", "r+" );
        fwrite($filename,$return_log);
        fclose($filename);
        fclose($newFile);*/

        if ($orderStatus=="1"){           //交易状态
            $message .= $mesType . 'PAY:success。';
        }elseif ($orderStatus=="0"){
            $message .= $mesType . 'PAY:failure。';
        }elseif ($orderStatus=="-1"){
            $message .= $mesType . 'PAY:wait。';
        }elseif ($orderStatus=="-2"){
            $message .= $mesType . 'PAY:wait。';
        }

        if (isset($this->request->post['orderNo']))
        {
            $message .= 'OrderNo: ' .$this->request->post['orderNo'] .' | TradeNo:' . $tradeNo . ' | orderInfo:' . $orderInfo . "\n";
        }

       /* $success = $this->model_check_order->getOwnerMessage('creditcard_success_order_status_id');
        $faild = $this->model_check_order->getOwnerMessage('creditcard_failed_order_status_id');
        $pression= $this->model_check_order->getOwnerMessage('config_compression');*/

        $success = "17";
        $faild   = "7";
        $pression= "0";
        if ($signInfoCheck == $signInfo)
        {
            if ($isPush == '1')
            {
                if (substr($orderInfo, 0, 5) == 'I0061')
                {
                    $this->response->setOutput($this->load->view('common/home'));
                    exit;
                } else {
                     if ($orderStatus == "1")
                    {
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $success, $message, false);
                        $this->response->setOutput($this->render(true), $pression);
                    } elseif ($orderStatus=="-1" || $orderStatus=="-2") {
                        $message .= 'Result: ' . $orderStatus . '\n';
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $faild, $message);
                        $this->response->setOutput($this->render(true), $pression);
                    } else {
                        $message .= 'Result: ' . $orderStatus . '\n';
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $faild, $message);
                        $this->response->setOutput($this->render(true), $pression);
                    }
                }
            } elseif ($isPush == '') {
                if(substr($orderInfo,0,5) == 'I0061'){	 //排除订单号重复(I0061)的交易

                    if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard_failure.tpl')) {
                        $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcard_failure.tpl',$data),$pression);
                    } else {
                        $this->response->setOutput($this->load->view('payment/creditcard_failure',$data),$pression);
                    }

                } else {
                    if ($orderStatus=="1" ){  //交易成功
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $success, $message, FALSE);

                        $data['continue'] = HTTPS_SERVER . 'index.php?route=checkout/success';
                        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard_success.tpl')) {
                            $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcard_success.tpl',$data),$this->config->get('config_compression'));
                        } else {
                            $this->response->setOutput($this->load->view('payment/creditcard_success',$data),$pression);
                        }


                    }elseif ($orderStatus=="-1" || $orderStatus=="-2"){   //交易待确认，待处理     二次支付
                        $message .= 'Result: ' . $orderStatus . "\n";
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $faild,$message, FALSE);
                        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard_failure.tpl')) {
                            $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcard_failure.tpl',$data),$pression);
                        } else {
                            $this->response->setOutput($this->load->view('payment/creditcard_failure',$data),$pression);
                        }

                    }else{     //交易失败
                        $message .= 'Result: ' . $orderStatus . "\n";
                        $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $faild,$message, FALSE);
                        if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard_failure.tpl')) {
                            $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcard_failure.tpl',$data),$pression);
                        } else {
                            $this->response->setOutput($this->load->view('payment/creditcard_failure',$data),$pression);
                        }

                    }

                }

            } else {
                $message .= 'Result: ' . $orderStatus . "\n";
                $this->model_checkout_order->addOrderHistory($this->request->post['orderNo'], $faild,$message, FALSE);
                if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/payment/creditcard_failure.tpl')) {
                    $this->response->setOutput($this->load->view($this->config->get('config_template') . '/template/payment/creditcard_failure.tpl',$data),$pression);
                } else {
                    $this->response->setOutput($this->load->view('payment/creditcard_failure',$data),$pression);
                }
            }

        }


    }
}