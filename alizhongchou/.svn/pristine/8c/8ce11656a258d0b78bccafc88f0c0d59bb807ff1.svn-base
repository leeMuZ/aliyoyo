<?php
class ModelAccountCustomer extends Model {
	public function addCustomer($data) {
		if (isset($data['customer_group_id'])) {
			$customer_group_id = $data['customer_group_id'];
		} else {
			$customer_group_id = 1;
		}
		if(empty($data['image'])){
		   $data['image'] = "catalog/logo/Profile_Photo.png";
		}
        $this->db->query("INSERT INTO " . DB_SHARE_PREFIX . "customer SET customer_group_id = '" . (int)$customer_group_id . "', store_id = '0', firstname = '" . $this->db->escape('') . "', lastname = '" . $this->db->escape('') ."',nickname='".$this->db->escape($data['nickname']). "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape('') . "', description = '" . $this->db->escape('') . "', custom_field = '', salt = '" . $this->db->escape($salt = token(9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '1', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '1',background_image='".$data['backgroundImageDefault']."',image ='".$data['image']. "', date_added = NOW()");
		$customer_id = $this->db->getLastId();
        
		/* $this->load->language('mail/customer');
		$this->load->model('tool/image');
		$subject = sprintf($this->language->get('text_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));

		$data['text_welcome'] = sprintf($this->language->get('text_welcome'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8')) . "\n\n";
		$data['url_link'] = $this->url->link('account/login', '', true);
		$data['text_login'] = $this->language->get('text_login');
		$data['text_services'] = $this->language->get('text_services');
		$data['logo_url']=$this->model_tool_image->resize('catalog/email/emailLogo.jpg', 760, 240);
		$data['coupon_url']=$this->model_tool_image->resize('catalog/email/coupon.png', 320,140 );
		$data['Useimmediately_url']=$this->model_tool_image->resize('catalog/email/Useimmediately.png', 150, 40);
		
		$mail = new Mail();
		$mail->protocol = $this->config->get('config_mail_protocol');
		$mail->parameter = $this->config->get('config_mail_parameter');
		$mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
		$mail->smtp_username = $this->config->get('config_mail_smtp_username');
		$mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
		$mail->smtp_port = $this->config->get('config_mail_smtp_port');
		$mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');
		$mail->setTo($data['email']);
		$mail->setFrom($this->config->get('config_email'));
		$mail->setSender(html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
		$mail->setSubject($subject);
		$mail->setHtml($this->load->view('mail/register', $data));
		$mail->send(); */
		
		// Send to main admin email if new account email is enabled
		/* if ($this->config->get('config_account_mail')) {
			$message  = $this->language->get('text_signup') . "\n\n";
			$message .= $this->language->get('text_website') . ' ' . html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8') . "\n";
			$message .= $this->language->get('text_nickname') . ' ' . $data['nickname'] . "\n";
			//$message .= $this->language->get('text_lastname') . ' ' . $data['lastname'] . "\n";
			$message .= $this->language->get('text_customer_group') . ' ' . $customer_group_info['name'] . "\n";
			$message .= $this->language->get('text_email') . ' '  .  $data['email'] . "\n";
			//$message .= $this->language->get('text_telephone') . ' ' . $data['telephone'] . "\n";
			$mail = new Mail();
			$mail->protocol = $this->config->get('config_mail_protocol');
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
			$mail->smtp_username = $this->config->get('config_mail_smtp_username');
			$mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = $this->config->get('config_mail_smtp_port');
			$mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');

			$mail->setTo($this->config->get('config_email'));
			$mail->setFrom($this->config->get('config_email'));
			$mail->setSender(html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
			$mail->setSubject(html_entity_decode($this->language->get('text_new_customer'), ENT_QUOTES, 'UTF-8'));
			$mail->setText($message);
			$mail->send();

			// Send to additional alert emails if new account email is enabled
			$emails = explode(',', $this->config->get('config_mail_alert'));

			foreach ($emails as $email) {
				if (utf8_strlen($email) > 0 && filter_var($email, FILTER_VALIDATE_EMAIL)) {
					$mail->setTo($email);
					$mail->send();
				}
			}
		} */

		return $customer_id;
	}

	public function editCustomer($data) {
		$customer_id = $this->customer->getId();
		if(isset($data['photo'])){
		$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']). "', nickname = '" . $this->db->escape($data['nickname'])  . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', description = '" . $this->db->escape($data['description']) . "', custom_field = '" . $this->db->escape(isset($data['custom_field']) ? json_encode($data['custom_field']) : '') ."',image ='".$data['photo']. "' WHERE customer_id = '" . (int)$customer_id . "'");
		}else{
		    $this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']). "', nickname = '" . $this->db->escape($data['nickname'])  . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', description = '" . $this->db->escape($data['description']) . "', custom_field = '" . $this->db->escape(isset($data['custom_field']) ? json_encode($data['custom_field']) : '') ."' WHERE customer_id = '" . (int)$customer_id . "'");
		}
	}
	public function editProfile($data) {
	    $this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET image ='".$data['profile']. "' WHERE customer_id='".$data['customer_id']."'");
	}

	public function edituserHomeBackgroud($data) {
	    $this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET background_image ='".$data['BackgroudImage']. "' WHERE customer_id='".$data['customer_id']."'");
	} 	
	public function editPassword($email, $password) {
		$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET salt = '" . $this->db->escape($salt = token(9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($password)))) . "', code = '' WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "'");
	}

	public function editCode($email, $code) {
		$this->db->query("UPDATE `" . DB_SHARE_PREFIX . "customer` SET code = '" . $this->db->escape($code) . "' WHERE LCASE(email) = '" . $this->db->escape(utf8_strtolower($email)) . "'");
	}

	public function editNewsletter($newsletter) {
		$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET newsletter = '" . (int)$newsletter . "' WHERE customer_id = '" . (int)$this->customer->getId() . "'");
	}

	public function getCustomer($customer_id) {
		$query = $this->db->query("SELECT * FROM " . DB_SHARE_PREFIX . "customer WHERE customer_id = '" . (int)$customer_id . "'");

		return $query->row;
	}
	public function getReviwCustomer($customer_id) {
	    $query = $this->db->query("SELECT customer_id,customer_group_id,image,nickname AS name FROM " . DB_SHARE_PREFIX . "customer WHERE customer_id = '" . (int)$customer_id . "'");
	    return $query->row;
	}
	public function  getUserHome($customer_id){
	    $query = $this->db->query("SELECT image, customer_group_id, nickname AS name, description, background_image, wishlist_count, list_count FROM " . DB_SHARE_PREFIX . "customer WHERE customer_id = '" . (int)$customer_id . "'");
	    return $query->row;
	}
	public function  getStoreHomeAtlogin($storeUser_id,$customer_id){
	    $query = $this->db->query("SELECT image,nickname AS name,description,background_image,wishlist_count,list_count,ocfs.customer_id AS isfollow FROM " . DB_SHARE_PREFIX . "customer oc LEFT JOIN ".DB_SHARE_PREFIX."customer_follow_store ocfs ON oc.customer_id = ocfs.follow_store_id AND ocfs.customer_id= '".$customer_id."' WHERE oc.customer_id = '" . $storeUser_id . "'");
	    return $query->row;
	}
	
	public function  getFollowAtlogin($user_id,$customer_id){
	    $query = $this->db->query("SELECT image,nickname AS name,description,background_image,wishlist_count,list_count,ocf.customer_id AS isfollow FROM " . DB_SHARE_PREFIX . "customer oc LEFT JOIN ".DB_SHARE_PREFIX."customer_follow ocf ON oc.customer_id = ocf.follow_customer_id AND ocf.customer_id= '".$customer_id."' WHERE oc.customer_id = '" . $user_id . "'");
	    return $query->row;
	}
	
	public function  getFollowerAtlogin($user_id,$customer_id){
	    $query = $this->db->query("SELECT image,nickname AS name,description,background_image,wishlist_count,list_count,ocf.customer_id AS isfollow FROM " . DB_SHARE_PREFIX . "customer oc LEFT JOIN ".DB_SHARE_PREFIX."customer_follow ocf ON oc.customer_id = ocf.follow_customer_id AND ocf.customer_id= '".$customer_id."' WHERE oc.customer_id = '" . $user_id . "'");
	    return $query->row;
	}
	
	public function getCustomerByEmail($email) {
		$query = $this->db->query("SELECT * FROM " . DB_SHARE_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "'");

		return $query->row;
	}

	public function getCustomerByCode($code) {
		$query = $this->db->query("SELECT customer_id, email, firstname, lastname FROM `" . DB_SHARE_PREFIX . "customer` WHERE code = '" . $this->db->escape($code) . "' AND code != ''");

		return $query->row;
	}

	public function getCustomerByToken($token) {
		$query = $this->db->query("SELECT * FROM " . DB_SHARE_PREFIX . "customer WHERE token = '" . $this->db->escape($token) . "' AND token != ''");

		$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET token = ''");

		return $query->row;
	}

	public function getTotalCustomersByEmail($email) {
		$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_SHARE_PREFIX . "customer WHERE LOWER(email) = '" . $this->db->escape(utf8_strtolower($email)) . "'");

		return $query->row['total'];
	}

	public function getRewardTotal($customer_id) {
		$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_SHARE_PREFIX . "customer_reward WHERE customer_id = '" . (int)$customer_id . "'");

		return $query->row['total'];
	}

	public function getIps($customer_id) {
		$query = $this->db->query("SELECT * FROM `" . DB_SHARE_PREFIX . "customer_ip` WHERE customer_id = '" . (int)$customer_id . "'");

		return $query->rows;
	}

	public function addLoginAttempt($email) {
		$query = $this->db->query("SELECT * FROM " . DB_SHARE_PREFIX . "customer_login WHERE email = '" . $this->db->escape(utf8_strtolower((string)$email)) . "' AND ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "'");

		if (!$query->num_rows) {
			$this->db->query("INSERT INTO " . DB_SHARE_PREFIX . "customer_login SET email = '" . $this->db->escape(utf8_strtolower((string)$email)) . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', total = 1, date_added = '" . $this->db->escape(date('Y-m-d H:i:s')) . "', date_modified = '" . $this->db->escape(date('Y-m-d H:i:s')) . "'");
		} else {
			$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer_login SET total = (total + 1), date_modified = '" . $this->db->escape(date('Y-m-d H:i:s')) . "' WHERE customer_login_id = '" . (int)$query->row['customer_login_id'] . "'");
		}
	}

	public function getLoginAttempts($email) {
		$query = $this->db->query("SELECT * FROM `" . DB_SHARE_PREFIX . "customer_login` WHERE email = '" . $this->db->escape(utf8_strtolower($email)) . "'");

		return $query->row;
	}

	public function deleteLoginAttempts($email) {
		$this->db->query("DELETE FROM `" . DB_SHARE_PREFIX . "customer_login` WHERE email = '" . $this->db->escape(utf8_strtolower($email)) . "'");
	}

	public function editCustomerImg($url) {
		$customer_id = $this->customer->getId();
		if(isset($url)){
			$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET image ='".$url. "' WHERE customer_id = '" . (int)$customer_id . "'");
		}
	}
	public function editCustomerImgs($url) {
		$customer_id = $this->customer->getId();
		if(isset($url)){
			$this->db->query("UPDATE " . DB_SHARE_PREFIX . "customer SET background_image ='".$url. "' WHERE customer_id = '" . (int)$customer_id . "'");
		}
	}
	public function getAllStore($data=array()){
		$sql="SELECT c.nickname,c.image,c.description,c.background_image,c.customer_id,c.wishlist_count,(SELECT count(*) AS total FROM " . DB_SHARE_PREFIX . "customer_follow_store AS cfs WHERE cfs.follow_store_id = c.customer_id) AS hot FROM " . DB_SHARE_PREFIX . "customer AS c WHERE c.customer_group_id = 5";
		if (isset($data['where_order'])) {
			$sql .= " ORDER BY " . $data['where_order'] ." DESC";
		}
		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}
		
			if ($data['limit'] < 1) {
				$data['limit'] = 15;
			}
		
			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}
		$query = $this->db->query($sql);
		return $query->rows;
	}
	public function getStoreTotal($data=array()){
	    $query = $this->db->query("SELECT count(*) AS total FROM " . DB_SHARE_PREFIX . "customer WHERE customer_group_id = 5");
	    
	    return $query->row['total'];
	}
}
