<?php
class ModelProjectCrowdFund extends Model {
    
	public function getCrowdFunding($funding_id) {
		$query = $this->db->query("SELECT 
		     funding_id,
		     customer_id,
		     name,
		     introduce,
		     current_goal,
		     total_goal,
		     backers,
		     image,
		     viedo,
		     status,
		     category_id,
		     date_added,
		     date_modified,
		     DATE_FORMAT(date_start,'%Y-%m-%d') as date_start,
		     DATE_FORMAT(date_ended,'%Y-%m-%d') as date_ended,
		     sort_order
		     FROM " . DB_PREFIX . "crowdfunding WHERE funding_id = '" . $funding_id . "'");
		return $query->row;
	}
	
	public function getCrowdFundingDescription($funding_id) {
	    $query = $this->db->query("SELECT 
	        description,
	        risk_description,
	        meta_title,
	        meta_description,
	        meta_keyword 
	        FROM " . DB_PREFIX . "crowdfunding_description WHERE funding_id = '" . $funding_id . "'");
	    return $query->row;
	}
	
	public function getCrowdFundingUpdates($data) {
	    $sql = "SELECT
	        update_id,
	        title,
	        content,
	        like_num,
	        comment_num,
	        post_type,
	        date_added
	        FROM " . DB_PREFIX . "crowdfunding_updates WHERE funding_id = '" . $data['funding_id'] . "'";
	    //支持者不传post_type 非支持者传0
	    if(isset($data['post_type'])){
	       $sql.= " AND post_type='0'";
	    }
	            
	    $query = $this->db->query($sql);
	    return $query->rows;
	}
	
	public function getCrowdFundingUpdate($update_id) {
	    $query = $this->db->query("SELECT
	        update_id,
	        title,
	        content,
	        like_num,
	        comment_num,
	        post_type,
	        date_added
	        FROM " . DB_PREFIX . "crowdfunding_updates WHERE update_id = '" . $update_id . "'");
	    return $query->row;
	}
	
	public function getCrowdFundingComment($funding_id){
	    $query = $this->db->query("SELECT
	        customer_id,
	        target_customer_id,
	        content,
	        date_added
	        FROM " . DB_PREFIX . "crowdfunding_comment WHERE funding_id = '" . $funding_id . "'");
	    return $query->row;
	}
	
	public function getPersonalInfo($funding_id){
	    $query = $this->db->query("SELECT
	        frp.name,
	        frp.identity_code,
	        frp.identity_image_face,
	        frp.identity_image_back,
	        frp.phone,
	        frp.email,
	        frp.bank_card,
	        frp.bank_name,
	        frp.address_id,
	        fra.province_id,
	        fra.city_id,
	        fra.area_id,
	        fra.address
	        FROM " . DB_PREFIX . "funds_recipient_pesonal frp LEFT JOIN " . DB_PREFIX . "funds_recipient_address fra ON frp.address_id=fra.address_id  WHERE funding_id = '" . $funding_id . "'");
	    return $query->row;
	}
	
	public function getCompanyInfo($funding_id){
	    $query = $this->db->query("SELECT
	        frc.name,
	        frc.identity_code,
	        frc.identity_image_face,
	        frc.identity_image_back,
	        frc.phone,
	        frc.email,
	        frc.address_id,
	        frc.licence_type,
	        frc.businessLicence,
	        frc.organizationCode,
	        frc.taxRegCertificate,
	        frc.bankAccPermits,
	        frc.company_name,
	        DATE_FORMAT(frc.registeredTime,'%Y-%m-%d') as registeredTime,
	        frc.company_intorduce,
	        frc.company_description,
	        frc.payee,
	        frc.payee_phone,
	        frc.bank_card,
	        frc.bank_name,
	        fra.province_id,
	        fra.city_id,
	        fra.area_id,
	        fra.address
	        FROM " . DB_PREFIX . "funds_recipient_company frc LEFT JOIN " . DB_PREFIX . "funds_recipient_address fra ON frc.address_id=fra.address_id  WHERE funding_id = '" . $funding_id . "'");
	    return $query->row;
	}

	public function add($data){
	  $total = $this->db->query("SELECT COUNT(*) AS total from cf_crowdfunding_review WHERE funding_id=".$data['funding_id']);	
	  $this->load->language('mail/customer');
	  $arr=$this->db->query("select a.name,b.firstname,b.lastname from cf_crowdfunding as a left join oc_customer as b on a.customer_id=b.customer_id where a.funding_id=".$data['funding_id']);
	  $arr=$arr->rows;
      $info=array();
	  foreach($arr as $v){
		  $info['name']=$v['name'];
		  $info['firstname']=$v['firstname'];
		  $info['lastname'] = $v['lastname'];
		  $info['content'] = $data['content'];
		  
	  }
 	    $data['info']=$info;
		$subject = sprintf('%s -Thank you for registering', html_entity_decode("Aliyoyo", ENT_QUOTES, 'UTF-8'));
		$message1 = $this->load->view('catalog/text',$data). "\n";		
		
		$message  = '<html dir="ltr" lang="en">' . "\n";
		$message .= '  <head>' . "\n";
		$message .= '    <title>' . $this->request->post['subject'] . '</title>' . "\n";
		$message .= '    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">' . "\n";
		$message .= '  </head>' . "\n";
		$message .= $this->load->view('catalog/argee',$data). "\n";
		$message .= '</html>' . "\n";
	  
	  if($total->row['total']>0){
		 if($data['status']==1){
		  $this->db->query("UPDATE  cf_crowdfunding_review SET funding_id = '" .$data['funding_id']."', content = '" . $this->db->escape($data['content'])."', status = '" .$data['status']."',notification = '" .(int)$this->db->escape($data['notification'])."',date_added = NOW() where funding_id=".$data['funding_id']);
          $this->db->query("UPDATE cf_crowdfunding set status=12 where funding_id='".$data['funding_id']."'");
           if($data['notification']==1){
			$mail = new Mail();
			$mail->protocol = 'smtp';
			$mail->parameter = 'customerservice@aliyoyo.com';
			$mail->smtp_hostname = 'hwsmtp.exmail.qq.com';
			$mail->smtp_username = 'customerservice@aliyoyo.com';
			$mail->smtp_password = html_entity_decode('Aliyoyo168', ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = 25;
			$mail->smtp_timeout = 100;
			$mail->setTo($data['email']);
			$mail->setFrom('customerservice@aliyoyo.com');
			$mail->setSender(html_entity_decode('Aliyoyo', ENT_QUOTES, 'UTF-8'));
			$mail->setSubject($subject);
			$mail->setHtml($message1);
			$mail->send();			
			}		
		 return $query->rows;
		 }elseif($data['status']==0){
		  $this->db->query("UPDATE  cf_crowdfunding_review SET funding_id = '" .$data['funding_id']."', content = '" . $this->db->escape($data['content'])."', status = '" .$data['status']."',notification = '" .(int)$this->db->escape($data['notification'])."',date_added = NOW() where funding_id=".$data['funding_id']);
		  $this->db->query("UPDATE cf_crowdfunding set status=10 where funding_id='".$data['funding_id']."'");
		  if($data['notification']==1){
			$subject = sprintf('%s -Thank you for registering', html_entity_decode("Aliyoyo", ENT_QUOTES, 'UTF-8'));
			$mail = new Mail();
			$mail->protocol = 'smtp';
			$mail->parameter = 'customerservice@aliyoyo.com';
			$mail->smtp_hostname = 'hwsmtp.exmail.qq.com';
			$mail->smtp_username = 'customerservice@aliyoyo.com';
			$mail->smtp_password = html_entity_decode('Aliyoyo168', ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = 25;
			$mail->smtp_timeout = 100;

			$mail->setTo($data['email']);
			$mail->setFrom('customerservice@aliyoyo.com');
			$mail->setSender(html_entity_decode('Aliyoyo', ENT_QUOTES, 'UTF-8'));
			$mail->setSubject($subject);
            $mail->setHtml($message);
			$mail->send();	
			}	
		 return $query->rows;
		 }
			
		}else{
		if($data['status']==1){
		   $this->db->query("INSERT INTO cf_crowdfunding_review SET funding_id = '" .$data['funding_id']."', content = '" . $this->db->escape($data['content'])."', status = '" .$data['status']."',notification = '" .(int)$this->db->escape($data['notification'])."',date_added = NOW()");
		   $this->db->query("UPDATE cf_crowdfunding set status=12 where funding_id='".$data['funding_id']."'");
          if($data['notification']==1){
			$subject = sprintf('%s -Thank you for registering', html_entity_decode("Aliyoyo", ENT_QUOTES, 'UTF-8'));
			$mail = new Mail();
			$mail->protocol = 'smtp';
			$mail->parameter = 'customerservice@aliyoyo.com';
			$mail->smtp_hostname = 'hwsmtp.exmail.qq.com';
			$mail->smtp_username = 'customerservice@aliyoyo.com';
			$mail->smtp_password = html_entity_decode('Aliyoyo168', ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = 25;
			$mail->smtp_timeout = 100;

			$mail->setTo($data['email']);
			$mail->setFrom('customerservice@aliyoyo.com');
			$mail->setSender(html_entity_decode('Aliyoyo', ENT_QUOTES, 'UTF-8'));
			$mail->setSubject($subject);
            $mail->setHtml($message1);
			$mail->send();	
			}
		  return $query->rows;
		}elseif($data['status']==0){
		  $this->db->query("INSERT INTO cf_crowdfunding_review SET funding_id = '" .$data['funding_id']."', content = '" . $this->db->escape($data['content'])."', status = '" .$data['status']."',notification = '" .(int)$this->db->escape($data['notification'])."',date_added = NOW()");
		  $this->db->query("UPDATE cf_crowdfunding set status=10 where funding_id='".$data['funding_id']."'");
          if($data['notification']==1){
			$subject = sprintf('%s -Thank you for registering', html_entity_decode("Aliyoyo", ENT_QUOTES, 'UTF-8'));
			$mail = new Mail();
			$mail->protocol = 'smtp';
			$mail->parameter = 'customerservice@aliyoyo.com';
			$mail->smtp_hostname = 'hwsmtp.exmail.qq.com';
			$mail->smtp_username = 'customerservice@aliyoyo.com';
			$mail->smtp_password = html_entity_decode('Aliyoyo168', ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = 25;
			$mail->smtp_timeout = 100;

			$mail->setTo($data['email']);
			$mail->setFrom('customerservice@aliyoyo.com');
			$mail->setSender(html_entity_decode('Aliyoyo', ENT_QUOTES, 'UTF-8'));
			$mail->setSubject($subject);
            $mail->setHtml($message);
			$mail->send();	
			}		  
		  return $query->rows;
		}
	   }
	}
    public function info($funding_id){
		$query = $this->db->query("SELECT * from cf_crowdfunding_review WHERE funding_id=".$funding_id);
	    return $query->rows;
	}
	
}